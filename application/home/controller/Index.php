<?php

namespace app\home\controller;

use app\common\logic\GoodsLogic;
use think\AjaxPage;
use think\Page;

class Index extends Base
{
    public $user;
    public $vip_id = 0;
    public $vip_ids;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        // 如果是手机跳转到 手机模块
        if (isMobile()) {
            redirect(url('Mobile/Home/index'));
        }
        $user = session('userinfo');
        if ($user) {
            $this->user = $user;
            $this->vip_id = session('vip_id');
            $this->vip_id = session('vip_id');
        }
        $this->assign('user', $user);
    }

    public function index()
    {
        $GoodsLogic = new GoodsLogic();
        //轮播图
        $carousel = getCarousel('pc');
        //是否有优惠券
        $where_coupon = array(
            'is_hidden' => 0,
            'is_publish' => 1,
        );
        $where_coupon['number'] = ['exp', ">actualsales"];
        $where_coupon['use_etime'] = ['gt', time()];
        $has_coupon = db(\tname::coupon)->where($where_coupon)->order('money desc')->find();
        if ($has_coupon) {
            $has_coupon['use_stime'] = date('Y.m.d', $has_coupon['use_stime']);
            $has_coupon['use_etime'] = date('Y.m.d', $has_coupon['use_etime']);
        }
        $flash_list = $this->get_flash_goods();
        $this->assign('flash_list', $flash_list);
        //最新商品
        $newList = $this->getNewGoods();
        $today = strtotime(date("Y-m-d", time()));
        $intDiff = $today + 86400 - time();
        $this->assign('intDiff', $intDiff);
        $h = date('G');
        if ($h < 11) $time_show = '早上好';
        else if ($h < 13) $time_show = '中午好';
        else if ($h < 17) $time_show = '下午好';
        else $time_show = '晚上好';
        $this->assign('carousel', $carousel);
        $this->assign('newList', $newList);
        $this->assign('title', "商城首页");
        $this->assign('time_show', $time_show);
        return $this->fetch();
    }

    public function get_flash_goods()
    {
        $todays = strtotime(date("Y-m-d", time()));
        $todaye = $todays + 86400;
        $now = time();
        $where['a.is_hidden'] = 0;
        $where['a.is_publish'] = 1;
        $where['a.is_end'] = 0;
        $where['a.end_time'] = array('gt', $now);
        $flash_list = db(\tname::flash_sale)->alias('a')
            ->join('mall_product p', 'a.goods_id=p.id')
            ->field('a.*,p.coverimg')
            ->where($where)->order('buy_num desc')->group('goods_id')->select();
        return $flash_list = array_chunk($flash_list, 4);
    }

    /**
     * 获取最新商品
     */
    public function getNewGoods()
    {
        $where = array(
            'is_hidden' => 0,
            'is_publish' => 1,
            'is_new' => 1,
        );
        $order = "sort asc,id desc";
        $dataList = db(\tname::mall_product)
            ->field('id,category_id,name,coverimg,price,(sales_config+sales_actual) as sales,brief')
            ->where($where)
            ->order($order)
            ->select();
        foreach ($dataList as &$value) {
            $value['coverimg'] = imgurlToAbsolute($value['coverimg']);
        }
        return $newList = array_chunk($dataList, 8);
//        dump($newList);
    }

    /**
     * 猜你喜欢
     * @author lxl
     * @time 17-2-15
     */
    public function ajax_favorite()
    {
        $_post = input("");
        $p = $_post['p'] ? $_post['p'] : 1;
        $i = $_post['i'] ? $_post['i'] : 5;
        $where = array(
            'is_publish' => 1,
            'is_recommend' => 1
        );
        $favourite_goods = db(\tname::mall_product)->where($where)->order('id DESC')->page($p, $i)->cache(true, 'favorite')->select();//首页推荐商品
        $this->assign('dataList', $favourite_goods);
        $html = $this->fetch('index/ajaxdata');
        return $html;
    }

    /**
     * 商品详情
     */
    public function detail()
    {
        $user = session('userinfo');
        $GoodsLogic = new GoodsLogic();
        $goods_id = input('param.goods_id');
        $goodsInfo = $GoodsLogic->getGoodsInfo($goods_id);
        if ($user) {
            $GoodsLogic->add_visit_log($user['vip_id'], $goodsInfo);
        }
        //规格
        $filter_spec = $GoodsLogic->get_spec($goods_id);
        foreach ($filter_spec as $key => $spec) {
            foreach ($spec as $key_s => $s) {
                if ($key_s == 0) {
                    $filter_spec[$key][$key_s]['sel'] = 1;
                } else {
                    $filter_spec[$key][$key_s]['sel'] = 0;
                }
            }
        }
        // 规格 对应 价格 库存表
        $goods_spec_price = db(\tname::goods_spec_price)
            ->where("goods_id", $goods_id)
            ->column("key,key_name,price,store_count,item_id");
        //收藏人数
        $collect_num = db(\tname::goods_collect)->where(array('goods_id' => $goods_id))->count();
        //是否收藏
        if ($user) {
            $has_collect = db(\tname::goods_collect)->where(array('vip_id' => $user['vip_id'], 'goods_id' => $goods_id))->find();
            $has_collect = $has_collect ? 1 : 0;
            $myCoupon = db(\tname::coupon_mycoupon)->where(array('vip_id' => $user['vip_id']))->column('coupon_id');
        } else {
            $has_collect = 0;
            $myCoupon = array();
        }
        //获取优惠券
        $couponLogic = new \app\common\logic\CouponLogic();
        $couponList = $couponLogic->getCouponList('free', '', '', 0, 100);
        foreach ($couponList as &$value) {
            if (empty($myCoupon)) {
                $value['has'] = 0;
            } else {
                $value['has'] = in_array($value['id'], $myCoupon) ? 1 : 0;
            }
            $value['type_desc'] = "满减券";
        }
        //全部评价
        $comment['total'] = db(\tname::mall_comment)->where(array('product_id' => $goods_id, 'is_show' => 1))->count();
        //好评
        $comment['good'] = db(\tname::mall_comment)->where(array('product_id' => $goods_id, 'is_show' => 1, 'star' => ['gt', 3]))->count();
        //中评
        $comment['medium'] = db(\tname::mall_comment)->where(array('product_id' => $goods_id, 'is_show' => 1, 'star' => ['eq', 3]))->count();
        //差评
        $comment['bad'] = db(\tname::mall_comment)->where(array('product_id' => $goods_id, 'is_show' => 1, 'star' => ['lt', 3]))->count();
        $goodsInfo['comment_num_text'] = comment_num_show($goodsInfo['comment_count']);
        $comment['total_text'] = comment_num_show($comment['total']);
        $comment['good_text'] = comment_num_show($comment['good']);
        $comment['medium_text'] = comment_num_show($comment['medium']);
        $comment['bad_text'] = comment_num_show($comment['bad']);
        //好评率
        $comment['good_rate'] = $comment['total'] == 0 ? 100 : (ceil($comment['good'] / $comment['total']) * 100);
        //看了又看
        $look_see = $GoodsLogic->get_look_see($goodsInfo);
        $hot_sale = $GoodsLogic->get_hot_sale($goodsInfo);
        //评论
        $where = array(
            'product_id' => $goods_id,
            'is_show' => 1,
            'status' => 1,
        );
        $commentList = db(\tname::mall_comment)
            ->field('*')
            ->where($where)
            ->order('id')
            ->select();
        foreach ($commentList as &$val) {
            if ($val['imgpath']) {
                $val['imgpath'] = unserialize($val['imgpath']);
            } else {
                $val['imgpath'] = [];
            }
        }
        $this->assign('commentList', $commentList);
        $this->assign('comment', $comment);
        $this->assign('goodsInfo', $goodsInfo);
        $this->assign('filter_spec', $filter_spec);
        $this->assign('goods_spec_price', json_encode($goods_spec_price, true)); // 规格 对应 价格 库存表
//        $this->assign('goods_spec_price', $goods_spec_price);
        $this->assign('couponList', $couponList);
        $this->assign('has_collect', $has_collect);
        $this->assign('collect_num', $collect_num);
        $this->assign('title', "商品详情");
        $this->assign('look_see', $look_see);//看了又看
        $this->assign('hot_sale', $hot_sale);
        return $this->fetch();
    }

    /**
     * 商品规格
     * @return \think\response\Json
     */
    public function activity()
    {
        $GoodsLogic = new GoodsLogic();
        $pdata = input('post.');
        $goods = db(\tname::mall_product)->where(array('id' => $pdata['goods_id']))->find();
        $goods_spec_price = $GoodsLogic->goodsSpecPrice($pdata['item_id']);
        if ($goods_spec_price) {
            $goods['price'] = $goods_spec_price['price'];
            $goods['market_price'] = $goods_spec_price['market_price'];
            $goods['stock'] = $goods_spec_price['store_count'];
        }
        if ($goods['prom_type'] == 1) {
            if ($goods_spec_price) {
                $goodsPromLogic = new \app\common\logic\FlashSaleLogic($goods, $goods_spec_price);
            } else {
                $goodsPromLogic = new \app\common\logic\FlashSaleLogic($goods, null);
            }
            //检查活动是否有效
            if ($goodsPromLogic->checkActivityIsAble()) {
                $result = $goodsPromLogic->getActivityGoodsInfo();
                $goods['old_price'] = $goods['price'];
                $goods['price'] = $result['activity_price'];
                $goods['stock'] = $result['store_count'];
                $goods['buy_limit'] = $result['buy_limit'];
                $goods['intDiff'] = $result['end_time'] - time();
                $goods['prom_type'] = 1;
            } else {
            }
        }
        $returndata = array(
            'goods' => $goods,
        );
        return ajaxSuccess($returndata);
    }

    /**
     * 商品评论ajax分页
     */
    public function ajaxComment()
    {
        $goods_id = input("goods_id/d", '0');
        $commentType = input('commentType', '0'); // 1 全部 2好评 3 中评 4差评
        $where = array(
            'product_id' => $goods_id,
            'is_show' => 1,
            'status' => 1,
        );
        switch ($commentType) {
            case 1:
                $where['star'] = array('gt', 3);
                break;
            case 2:
                $where['star'] = array('eq', 3);
                break;
            case 3:
                $where['star'] = array('lt', 3);
                break;
        }
        $count = db(\tname::mall_comment)->where($where)->count();
        $page = new AjaxPage($count, 10);
        $show = $page->show();
        $list = db(\tname::mall_comment)
            ->where($where)->order('id')->limit($page->firstRow . ',' . $page->listRows)->select();
        foreach ($list as $k => &$val) {
            if ($val['imgpath']) {
                $val['imgpath'] = unserialize($val['imgpath']);
            } else {
                $val['imgpath'] = [];
            }
        }
        $this->assign('commentlist', $list);// 商品评论
        $this->assign('page', $show);// 赋值分页输出
        return $this->fetch();
    }

    /**
     *
     */
    public function goodslist()
    {
        error_reporting(E_ERROR | E_PARSE);
        $search = input("");
        $where = array(
            'is_publish' => 1,
            'is_hidden' => 0
        );
        if (trim($search['keyword'])) {
            $where['a.name'] = array('like', '%' . trim($search['keyword']) . '%');
        }
        $cate = [];
        if ($search['cate1']) {
            $where['category_id'] = $search['cate1'];
            $cate['cate1'] = db(\tname::mall_category)->where(array('id' => $search['cate1']))->find();
        }
        if ($search['cate2']) {
            $where['category_id_two'] = $search['cate2'];
            $cate['cate2'] = db(\tname::mall_category)->where(array('id' => $search['cate2']))->find();
        }
        $sort = "";
        switch ($search['sort']) {
            case "sales":
                $sort = "sales desc,";
                break;
            case "price":
                $sort = "price asc,";
                break;
            case "comment_num":
                $sort = "comment_count desc,";
                break;
            case "comment_num":
                $sort = "create_time desc,";
                break;
        }
        $sort .= "a.id desc";
        $count = db(\tname::mall_product)->alias('a')->where($where)->count();
        $page = new Page($count, 16);
        $goods_list = db(\tname::mall_product)->alias('a')
            ->field('a.id,a.name,a.coverimg,a.price,(a.sales_config+a.sales_actual) as sales,a.comment_count')
            ->where($where)->order($sort)
            ->limit($page->firstRow . ',' . $page->listRows)->select();
        //热门推荐
        $where_recommend = array(
            'is_publish' => 1,
            'is_hidden' => 0,
            'is_recommend' => 1
        );
        $recommend_list = db(\tname::mall_product)->alias('a')
            ->field('a.id,a.name,a.coverimg,a.price,(a.sales_config+a.sales_actual) as sales,a.comment_count')
            ->where($where_recommend)->order('sort asc,id')
            ->limit(4)->select();
        $this->assign('goods_list', $goods_list);
        $this->assign('recommend_list', $recommend_list);// 赋值分页输出
        $this->assign('page', $page);// 赋值分页输出
        $this->assign('search', $search);
        $this->assign('cate', $cate);
        return $this->fetch();
    }

    /**
     *限时秒杀
     */
    public function flash_sale()
    {
        error_reporting(E_ERROR | E_PARSE);
        $search = input("");
        $todays = strtotime(date("Y-m-d", time()));
        $todaye = $todays + 86400;
        $now = time();
        $where['a.is_hidden'] = 0;
        $where['a.is_publish'] = 1;
        $where['a.is_end'] = 0;
        $where['a.end_time'] = array('gt', $now);
        $flash_list = db(\tname::flash_sale)->alias('a')
            ->join('mall_product p', 'a.goods_id=p.id')
            ->field('a.*,p.coverimg,p.name as goods_name')
            ->where($where)->order('buy_num desc')->group('goods_id')->select();
        foreach ($flash_list as &$val) {
            $percent = $val['buy_num'] / $val['goods_num'];
            $val['percent'] = ceil($percent);
        }
        //热门推荐
        $where_recommend = array(
            'is_publish' => 1,
            'is_hidden' => 0,
            'is_recommend' => 1
        );
        $recommend_list = db(\tname::mall_product)->alias('a')
            ->field('a.id,a.name,a.coverimg,a.price,(a.sales_config+a.sales_actual) as sales,a.comment_count')
            ->where($where_recommend)->order('id')
            ->limit(4)->select();
        foreach ($recommend_list as &$val) {
            $val['sales_text'] = comment_num_show($val['sales']);
            $val['comment_count_text'] = comment_num_show($val['comment_count']);
        }
        $today = strtotime(date("Y-m-d", time()));
        $intDiff = $today + 86400 - time();
        $this->assign('intDiff', $intDiff);
        $this->assign('flash_list', $flash_list);
        $this->assign('recommend_list', $recommend_list);// 赋值分页输出
        return $this->fetch();
    }

    public function article_detail()
    {
        $id = input('param.id');
        $article = db(\tname::news)->where(array('id' => $id))->find();
        $this->assign('article', $article);
        return $this->fetch();
    }
}
