<?php

namespace app\home\controller;

use app\common\logic\CartLogic;

class Cart extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function cart()
    {
        $user = session('userinfo');
        if (empty($user)) {
            $this->error('你还没有登录，请先登录');
        }
        $user = session('userinfo');
        $pdata = input('');
        $pdata['vip_id'] = $user['vip_id'];
        $CartLogic = new CartLogic();
        $result = $CartLogic->getCartList($pdata);
        $returndata = array(
            'cartList' => $result['cartList'],
            'total_count' => $result['total_count'],
        );
        $cartList = $result['cartList'];
        foreach ($cartList as &$val) {
            $val['total_price'] = number_format($val['price'] * $val['number'], 2, ".", "");
        }
        $this->assign('cartList', $cartList);
        $this->assign('total_count', $result['total_count']);
        $this->assign('title', "购物车");
        return $this->fetch();
    }

    /**
     * 更新购物车
     */
    public function cart_update()
    {
        $user = session('userinfo');
        if (empty($user)) {
            return ajaxFalse('您未登录，立即登录？', '', '', 2);
        }
        $CartLogic = new CartLogic();
        $pdata = input('');
        $pdata['vip_id'] = $user['vip_id'];
        $result = $CartLogic->cart_update($pdata);
        if ($result['status'] == 0) {
            return json(ajaxFalse($result['msg']));
        }
        return json(ajaxSuccess("", $result['msg']));
    }

    /*
     * 删除购物车
     */
    public function ajax_cart_del()
    {
        $user = session('userinfo');
        $pdata = input('post.');
        if ($pdata['type'] == 1) {
            $res = db(\tname::mall_cart)->where(array('id' => $pdata['id']))->delete();
        }
        if ($pdata['type'] == 2) {
            $res = db(\tname::mall_cart)->where(array('selected' => 1, 'vip_id' => $user['vip_id']))->delete();
        }
        if (!$res) {
            return json(ajaxFalse());
        }
        return json(ajaxSuccess());
    }

    /**
     * ajax更新购物车
     */
    public function ajax_cart_update()
    {
        $user = session('userinfo');
        $CartLogic = new CartLogic();
        $pdata = input('post.');
        $pdata['vip_id'] = $user['vip_id'];
        if (!$pdata['vip_id']) {
            return json(ajaxFalse('！您还没有登录'));
        }
        $result = $CartLogic->ajax_cart_update($pdata);
        if ($result['status'] == 0) {
            return json(ajaxFalse($result['msg']));
        }
        return json(ajaxSuccess("", $result['msg']));
    }

    public function cart_select()
    {
        $user = session('userinfo');
        $_post = input('');
        $where['vip_id'] = $user['vip_id'];
        if ($_post['type'] == 1) {
            $where['id'] = $_post['id'];
            $res = db(\tname::mall_cart)->where($where)->update(array('selected' => $_post['selected']));
        } else {
            $res = db(\tname::mall_cart)->where($where)->update(array('selected' => $_post['selected']));
        }
        if (!$res) {
            return json(ajaxFalse("！操作失败，请稍后重试"));
        }
        return json(ajaxSuccess("", "操作成功！"));
    }

    /**
     * 订单确认
     * @return \think\response\Json
     */
    public function confirmorder()
    {
        $user = session('userinfo');
        $pdata = input('');
        $action = $pdata['action'];
        $goods_id = $pdata['goods_id'];
        $item_id = $pdata['item_id'];
        $buy_num = $pdata['buy_num'];
        $cart_ids = $pdata['cart_ids'];
        $vip_id = $user['vip_id'];
        $cartLogic = new \app\common\logic\CartLogic();
        $cartLogic->setUserId($vip_id);
        if ($action == 'buy_now') {
            $result = $cartLogic->buy_now($goods_id, $item_id, $buy_num, 'pc');
        } else {
            $result = $cartLogic->buy_cart($vip_id, 'pc');
        }
        if ($result['status'] == !1) {
            $this->error($result['msg']);
        }
        $cartList = $result['cartList'];
        $total_count = $result['total_count'];
        //获取我的优惠券
        $couponLogic = new \app\common\logic\CouponLogic();
        $couponList = $couponLogic->getMyCoupon($vip_id, 'free', $status = 0, $limit = $total_count['goods_price'], $sort = 'money', $asc = 'desc', true);
        //获取我的地址
        $AddressLogic = new \app\common\logic\AddressLogic();
        $addressList = $AddressLogic->getAddressList($vip_id);
        foreach ($addressList as &$val) {
            $val['linktel_hide'] = hidtel($val['linktel']);
        }
        $default_address = db(\tname::vip_myaddress)->where(array('vip_id' => $vip_id, 'is_default' => 1))->find();
        $express_fee = 0;
        if ($default_address) {
            $express_fee = db(\tname::config_freight)->where(array('region_code' => $default_address['province_code']))->value('first_money');
        } else {
        }
        $total_count["express_fee"] = number_format($express_fee, 2, ".", "");
        //省份列表
        $provinceList = db(\tname::region)->where(array('level' => 1))->order('id')->select();
        $this->assign('provinceList', $provinceList);
        $this->assign('cartList', $cartList);
        $this->assign('total_count', $total_count);
        $this->assign('couponList', $couponList);
        $this->assign('sel_address', $default_address);
        $this->assign('addressList', $addressList);
        $this->assign('action', $action);
        $this->assign('goods_id', $goods_id);
        $this->assign('item_id', $item_id);
        $this->assign('title', "确认订单");
        return $this->fetch();
    }

    /**
     * 计算运费
     */
    public function count_repress_fee()
    {
        $pdata = input('post.');
        $address = db(\tname::vip_myaddress)->where(array('id' => $pdata['id']))->find();
        $express_fee = 0;
        if ($address) {
            $express_fee = db(\tname::config_freight)->where(array('region_code' => $address['province_code']))->value('first_money');
        }
        $express_fee = number_format($express_fee, 2, ".", "");
        return json(ajaxSuccess($express_fee));
    }
}